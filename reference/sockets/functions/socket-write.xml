<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 2ca1058473429d338de6eb773f268fc18a71d2f9 Maintainer: songmeifeng Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<refentry xml:id="function.socket-write" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>socket_write</refname>
  <refpurpose>向套接字写数据</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>socket_write</methodname>
   <methodparam><type>Socket</type><parameter>socket</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>length</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   函数 <function>socket_write</function> 向 <parameter>socket</parameter> 
   写入 <parameter>data</parameter>。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>socket</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       要写入到缓冲区的数据。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       可选参数 <parameter>length</parameter> 可以指定写入 socket 
       的字节长度。如果写入的字节长度大于 <parameter>data</parameter>
       的长度，默认将被截取为 <parameter>data</parameter> 长度。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   返回成功写入 socket 的字节数&return.falseforfailure;。可以通过调用 <function>socket_last_error</function> 
   来检索实际的错误码。将错误码作为参数传递给 <function>socket_strerror</function> 以获得错误的文本解释。
  </para>
  <note>
   <para>
    对于 <function>socket_wirte</function> 来说返回 0 是完全有效的，这代表没有字节被写入。如果发生错误，务必使用 <literal>===</literal> 
    运算符来判断是否为 &false;。
   </para>
  </note>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &sockets.changelog.socket-param;
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>length</parameter> 现在允许为 null。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    <function>socket_write</function> 不一定会写入 <parameter>data</parameter> 的所有字节。根据网络缓冲区等因素，即使
    <parameter>data</parameter> 较长，也可能只写入部分数据，甚至是一个字节。必须使用循环来确保已完整传输剩余
    <parameter>data</parameter>。
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>socket_accept</function></member>
    <member><function>socket_bind</function></member>
    <member><function>socket_connect</function></member>
    <member><function>socket_listen</function></member>
    <member><function>socket_read</function></member>
    <member><function>socket_strerror</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
